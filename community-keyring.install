msg() {
    local ALL_OFF="\e[1;0m"
    local BOLD="\e[1;1m"
    local GREEN="${BOLD}\e[1;32m"

    local MESSAGE=$1
    shift 1
    printf "${GREEN}==>${ALL_OFF}${BOLD} ${MESSAGE}${ALL_OFF}\n" "$@" >&2
}

post_upgrade() {
    if usr/bin/pacman-key -l >/dev/null 2>&1; then
        usr/bin/pacman-key --populate community
    else
        pacman-key --init
        pacman-key --populate community
    fi
    
    md5sum=$(md5sum /etc/pacman.conf | awk '{print $1}')
    chaotic=$(grep chaotic-aur /etc/pacman.conf)
    if [ "$md5sum" != "f9a5f2f1ab90bd967a15916dba3fa65d" ]; then
        echo '#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/pacman/
CacheDir = /var/cache/pacman/pkg/
#LogFile     = /var/log/pacman.log
#GPGDir      = /etc/pacman.d/gnupg/
#HookDir     = /etc/pacman.d/hooks/
HoldPkg      = pacman glibc manjaro-system
# If upgrades are available for these packages they will be asked for first
SyncFirst    = manjaro-system archlinux-keyring manjaro-keyring community-keyring
#XferCommand = /usr/bin/curl -C - -f %u > %o
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
#UseDelta    = 0.7
Architecture = auto
ParallelDownloads = 7

#IgnorePkg   =
#IgnorePkg   =
#IgnoreGroup =

#NoUpgrade   =
#NoExtract   =

# Misc options
#UseSyslog
Color
ILoveCandy
#TotalDownload
# We cannot check disk space from within a chroot environment
CheckSpace
#VerbosePkgLists

# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel    = Required DatabaseNever
LocalFileSigLevel = Optional
#RemoteFileSigLevel = Required

[core]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorcdn
Include = /etc/pacman.d/mirrorlist

[extra]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorcdn
Include = /etc/pacman.d/mirrorlist

[community]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorcdn
Include = /etc/pacman.d/mirrorlist

[multilib]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorcdn
Include = /etc/pacman.d/mirrorlist

[community-stable]
SigLevel = PackageRequired
Server = https://repo.communitybig.org/stable/$arch


' | tee /etc/pacman.conf
    fi

    if [ -n "$chaotic" ];then
        echo '[chaotic-aur]
Include = /etc/pacman.d/chaotic-mirrorlist
' | tee -a /etc/pacman.conf
    fi
}

post_install() {
    if [ -x usr/bin/pacman-key ]; then
        post_upgrade
    fi
}
